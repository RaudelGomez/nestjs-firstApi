// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid()) 
  email     String   @unique // Email único para cada usuario
  name      String?  // Nombre del usuario, puede ser nulo
  password  String  
  posts     Post[]
  houses    UsersHouses[]
     
  createdAt DateTime @default(now()) // Fecha de creación con valor por defecto
  updatedAt DateTime @updatedAt // Fecha de actualización automática
}

model Post {
  id        Int   @id @default(autoincrement()) // ID único autoincrementable
  title     String   @unique // Email único para cada usuario
  content   String?  // Nombre del usuario, puede ser nulo
  authorId  String
  author User @relation(fields: [authorId], references: [id])
    
  createdAt DateTime @default(now()) // Fecha de creación con valor por defecto
  updatedAt DateTime @updatedAt // Fecha de actualización automática
}

model House {
  id        String   @id @default(cuid()) 
  owners    UsersHouses[]
}

model UsersHouses {
  owner User @relation(fields: [ownerId], references: [id])
  ownerId String
  house House @relation(fields: [houseId], references: [id]) 
  houseId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  @@id([ownerId, houseId])
}